// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Udemy.Data;

#nullable disable

namespace Ledgerly.API.Migrations
{
    [DbContext(typeof(LedgerlyDbContext))]
    [Migration("20250818041937_initDataForCategoryAndGlobalParam")]
    partial class initDataForCategoryAndGlobalParam
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP850_BIN")
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsSystemValue")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("StatusId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedDate = new DateTime(2025, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSystemValue = false,
                            Name = "Main",
                            StatusId = 1,
                            UserId = "user-id"
                        });
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.GlobalParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KeyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("GlobalParam", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KeyName = "Normal",
                            Name = "Normal",
                            Type = "CategoryxxxStatus"
                        },
                        new
                        {
                            Id = 2,
                            KeyName = "Deleted",
                            Name = "Deleted",
                            Type = "CategoryxxxStatus"
                        },
                        new
                        {
                            Id = 3,
                            KeyName = "Normal",
                            Name = "Normal",
                            Type = "TransactionxxxStatus"
                        },
                        new
                        {
                            Id = 4,
                            KeyName = "Deleted",
                            Name = "Deleted",
                            Type = "TransactionxxxStatus"
                        },
                        new
                        {
                            Id = 5,
                            KeyName = "Normal",
                            Name = "Normal",
                            Type = "AccountxxxStatus"
                        },
                        new
                        {
                            Id = 6,
                            KeyName = "Deleted",
                            Name = "Deleted",
                            Type = "AccountxxxStatus"
                        });
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StatusId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("Ledgerly.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Account", b =>
                {
                    b.HasOne("Ledgerly.API.Models.Domains.GlobalParam", "GlobalParam")
                        .WithMany("Accounts")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Account_Status_StatusId");

                    b.Navigation("GlobalParam");
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Category", b =>
                {
                    b.HasOne("Ledgerly.API.Models.Domains.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Category_Parent_ParentId");

                    b.HasOne("Ledgerly.API.Models.Domains.GlobalParam", "GlobalParam")
                        .WithMany("Categories")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Category_GlobalParam_StatusId");

                    b.Navigation("GlobalParam");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Transaction", b =>
                {
                    b.HasOne("Ledgerly.API.Models.Domains.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Account_AccountId");

                    b.HasOne("Ledgerly.API.Models.Domains.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Category_CategoryId");

                    b.HasOne("Ledgerly.API.Models.Domains.GlobalParam", "GlobalParam")
                        .WithMany("Transactions")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_GlobalParam_StatusId");

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("GlobalParam");
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Ledgerly.API.Models.Domains.GlobalParam", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Categories");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
